AWSTemplateFormatVersion: 2010-09-09
Description: >
  AWS CloudFormation Network Resources template to create the required container services on ECS for existing VPC implementation (evaluation version) (qs-1shsu3b5d)
Parameters:
  ECSCluster:
    Description: ECS Cluster Name
    Type: String
    Default: ''
  PublicSubnet1:
    Description: VPC Public Subnet 1
    Type: String
    Default: ''
  PublicSubnet2:
    Description: VPC Public Subnet 2
    Type: String
    Default: ''
  PrivateSubnet1A:
    Description: VPC Private Subnet 1A
    Type: String
    Default: ''
  PrivateSubnet2A:
    Description: VPC Private Subnet 2A
    Type: String
    Default: ''
  PrivateSubnet3A:
    Description: VPC Private Subnet 3A
    Type: String
    Default: ''
  VPCID:
    Description: VPC ID
    Type: String
    Default: ''
  ContainerSecurityGroup:
    Description: Container Security Group Name
    Type: String
    Default: ''
  JVBDiscoveryService:
    Description: JVB DiscoveryService Arn
    Type: String
    Default: ''
  JVBEVALTLSTG:
    Description: JVB TLS Target Group ID
    Type: String
    Default: ''
  JVBEVALUDPTG:
    Description: JVB UDP Target Group ID
    Type: String
    Default: ''
  RCHATEVALTLSTG:
    Description: Rchat TLS Target Group ID
    Type: String
    Default: ''
  ECSTDJVB:
    Description: JVB Task Definition
    Type: String
    Default: ''
  ECSTDJITSI:
    Description: JITSI Task Definition
    Type: String
    Default: ''
  ECSTDRCHAT:
    Description: RCHAT Task Definition
    Type: String
    Default: ''
Resources:
  JVBScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 5
      MinCapacity: 1
      RoleARN:
        Fn::Sub: 'arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService'
      ServiceNamespace: ecs
      ScalableDimension: 'ecs:service:DesiredCount'
      ResourceId: !Join
        - /
        - - service
          - !Ref ECSCluster
          - !GetAtt JVB2Service.Name

  JVBServiceScalingPolicyCPU:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-target-tracking-cpu50
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref JVBScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 10
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization

  JVBService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: "ECSCluster"
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      HealthCheckGracePeriodSeconds: 600
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref PrivateSubnet1A
            - !Ref PrivateSubnet2A
          SecurityGroups:
            - !Ref ContainerSecurityGroup
      LoadBalancers:
        - ContainerName: jitsi-web
          ContainerPort: 443
          TargetGroupArn: !Ref JVBEVALTLSTG
        - ContainerName: jitsi-jvb
          ContainerPort: 10000
          TargetGroupArn: !Ref JVBEVALUDPTG
      TaskDefinition:
        Ref: "ECSTDJITSI"
      ServiceRegistries:
        - RegistryArn: !Ref JVBDiscoveryService
      PlatformVersion: "1.4.0"

  JVB2Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: "ECSCluster"
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref PrivateSubnet1A
            - !Ref PrivateSubnet2A
          SecurityGroups:
            - !Ref ContainerSecurityGroup
      TaskDefinition:
        Ref: "ECSTDJVB"
      PlatformVersion: "1.4.0"

  RCHATService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: "ECSCluster"
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      HealthCheckGracePeriodSeconds: 600
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref PrivateSubnet1A
            - !Ref PrivateSubnet2A
          SecurityGroups:
            - !Ref ContainerSecurityGroup
      LoadBalancers:
        - ContainerName: cm-web
          ContainerPort: 443
          TargetGroupArn: !Ref RCHATEVALTLSTG
      TaskDefinition:
        Ref: "ECSTDRCHAT"
      PlatformVersion: "1.4.0"

Outputs:
  UsedByECSCreateCluster:
    Description: Flag used by Elastic Container Service Create Cluster Wizard
    Value: 'true'
  TemplateVersion:
    Description: The version of the template used by Create Cluster Wizard
    Value: 1.1.0
